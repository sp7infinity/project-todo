{"version":3,"sources":["utils/idgenerator.js","components/Area/AreaHeader.js","hooks/useKeyPress.js","components/Todo/Todo.js","components/Area/AreaContent.js","components/Area/Area.js","components/Platform/Platform.js","utils/initData.js","components/App/App.js","index.js"],"names":["generateId","Math","random","toString","substr","AreaHeader","props","areaKey","title","add","className","onClick","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","useEffect","downHandler","key","upHandler","window","addEventListener","removeEventListener","Todo","data","index","change","remove","checked","unchecked","isInputActive","setIsInputActive","text","inputValue","setInputValue","isChecked","setIsChecked","inputRef","useRef","enter","useKeypress","esc","onEnter","useCallback","onEsc","current","focus","handleInputChange","event","target","value","ref","onChange","AreaContent","todos","map","item","id","Area","areaClassName","name","toLowerCase","items","Platform","doArea","scheduleArea","delegateArea","eliminateArea","doneArea","areas","setAreas","addTodo","newTodo","area","push","newObj","removeTodo","splice","changeTodo","checkedTodo","uncheckedTodo","filter","todo","areaComponents","Object","entries","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29186cd2.chunk.js","sourcesContent":["export const generateId = () => {\n    return Math.random().toString(36).substr(2, 9);\n  }","import { PlusSquare } from \"react-feather\";\n\nimport \"./AreaHeader.css\"\n\nfunction AreaHeader(props) {\n    const { areaKey, title, add } = props;\n\n    return (\n        <div className={ \"area-title\" }>\n            <h2 className=\"title-text\">{ title }</h2>\n            {\n                areaKey === \"doneArea\" \n            ?\n                null\n            :\n                <button onClick={ () => add(areaKey)}><PlusSquare /></button>\n            }\n            \n        </div>\n    )\n}\n\nexport default AreaHeader;","import { useState, useEffect } from \"react\";\n\nfunction useKeyPress(targetKey) {\n \n  const [keyPressed, setKeyPressed] = useState(false);  \n\n  useEffect(() => {\n    const downHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n  \n    const upHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); \n\n  return keyPressed;\n}\n\nexport default useKeyPress;\n","import { useState, useEffect, useRef, useCallback } from 'react';\nimport { Edit, CheckSquare, CheckCircle, XCircle, XSquare } from 'react-feather';\nimport useKeypress from \"../../hooks/useKeyPress\";\n\nimport './Todo.css'\n\nfunction Todo(props) {\n  \n  const { data, areaKey, index, change, remove, checked, unchecked } = props;\n\n  const [isInputActive, setIsInputActive] = useState(false);\n  const [inputValue, setInputValue] = useState(data.text);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const inputRef = useRef(null);\n\n  const enter = useKeypress(\"Enter\");\n  const esc = useKeypress(\"Escape\");\n\n  const onEnter = useCallback(() => {\n    if (enter) {\n      change(areaKey, index, inputValue);\n      setIsInputActive(false);\n    }\n  }, [enter, inputValue, change]);\n\n  const onEsc = useCallback(() => {\n    if (esc) {\n      setInputValue(data.text);\n      setIsInputActive(false);\n    }\n  }, [esc, data.text]);\n\n  \n  useEffect(() => {\n    if (isInputActive) {\n      inputRef.current.focus();\n    }\n  }, [isInputActive]);\n\n  useEffect(() => {\n    if (isInputActive) {\n      onEnter(); \n      onEsc(); \n    }\n  }, [onEnter, onEsc, isInputActive]); \n\n  const handleInputChange = useCallback(\n    (event) => {\n \n      setInputValue(event.target.value);\n    },\n    [setInputValue]\n  );\n\n  const handleSave = () => {\n    change(areaKey, index, inputValue);\n    setIsInputActive(false);\n  }\n\n  const handleEdit = () => {\n    setIsInputActive(true);\n  }\n\n  const handleCheck = () => {\n    checked(\"doneArea\", inputValue);\n    setIsChecked(true);\n  }\n\n  const handleUncheck = () => {\n    unchecked(\"doneArea\", inputValue);\n    setIsChecked(false);\n  }\n\n  return(\n\n    <div className=\"todo\">\n      <div className={`todo ${isInputActive ? \" active\": \"\"}`}>\n        { isInputActive ? \n          <textarea\n            className=\"text-input\"\n            ref={inputRef}\n            value={inputValue}\n            onChange={handleInputChange}\n          />\n          :\n          <span className={`text-input ${isChecked ? \"checked\" : \"\"}`}>\n            {data.text}\n          </span>\n        }  \n      </div>\n      {\n        areaKey === \"doneArea\" ?\n        null\n      :\n      <div className=\"button-section\">\n        { isInputActive ?\n          <button className=\"action-button save-button\" onClick={handleSave}><CheckSquare/></button>\n        :               \n          <button className=\"action-button edit-button\" onClick={handleEdit}><Edit/></button>              \n        }\n        {\n          isInputActive ? \n          null\n        : \n          isChecked ?\n          <button className=\"action-button uncheck-button\" onClick={handleUncheck}><XCircle /></button>\n        :\n          <button className=\"action-button check-button\" onClick={handleCheck}><CheckCircle/></button>\n        }          \n        <button className=\"action-button remove-button\" onClick={() => remove(areaKey, index)}><XSquare /></button>\n      </div>           \n      }\n    </div>\n  );\n}\n\nexport default Todo;","import Todo from '../Todo/Todo';\n\nimport './AreaContent.css'\n\nfunction AreaContent(props) {\n  const { areaKey, todos, change, remove, checked, unchecked } = props;\n\n  return (\n    <div className={\"area-content\"}>\n      <div className={\"area-droppable\"}>          \n        { todos.map((item, index) =>\n            <div key={item.id}>\n              <Todo areaKey={areaKey} key={item.id} data={item} index={index} change={change} remove={remove} checked={checked} unchecked={unchecked} />\n            </div>)\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AreaContent;","import AreaHeader from './AreaHeader'\nimport AreaContent from './AreaContent';\n\nimport './Area.css'\n\nfunction Area(props) {\n  const { data, areaKey, add, change, remove, checked, unchecked } = props;\n  const areaClassName = data.name.toLowerCase(); \n\n  return (\n    <div key={areaKey} className={`area ${areaClassName}-area`}>\n      \n      <AreaHeader areaKey={areaKey} title={data.name} add={add} />\n      <AreaContent areaKey={areaKey} todos={data.items} change={change} remove={remove} checked={checked} unchecked={unchecked}/>\n\n    </div>\n  )\n}\n\nexport default Area;","import { useState } from 'react';\nimport { generateId } from '../../utils/idgenerator';\nimport { initializeData } from '../../utils/initData';\n\nimport Area from '../Area/Area';\n\nimport './Platform.css';\n\n\nfunction Platform() {\n  const [areas, setAreas] = useState(initializeData());\n\n  const addTodo = (key) => {\n    const newTodo = { id: generateId(), text: \"\"}\n    let area = areas[key];\n    area.items.push(newTodo);\n    const newObj = { ...areas, [key]: area };\n    setAreas(newObj);\n  }\n\n  const removeTodo = (key, index) => {\n    let area = areas[key];\n    area.items.splice(index, 1);\n    const newObj = { ...areas, [key]: area };\n    setAreas(newObj);\n  }\n\n  const changeTodo = (key, index, text) => {\n    let area = areas[key];\n    area.items[index].text = text;\n    const newObj = { ...areas, [key]: area}\n    setAreas(newObj);\n  }\n  const checkedTodo = (key, text) => {\n    const newTodo = { id: generateId(), text: text}\n    let area = areas[key];\n    area.items.push(newTodo);\n    const newObj = { ...areas, [key]: area };\n    setAreas(newObj);\n  }\n\n  const uncheckedTodo = (key, text) => {\n    let area = areas[key];\n    area.items = area.items.filter(todo => todo.text !== text);\n    const newObj = { ...areas, [key]: area };\n    setAreas(newObj);\n  }\n\n  const areaComponents = Object.entries(areas).map(([areaKey, area], index) =>\n    <Area key={areaKey} areaKey={areaKey} data={area} add={addTodo} change={changeTodo} remove={removeTodo} checked={checkedTodo} unchecked={uncheckedTodo}/>\n  );\n\n  return (\n    <div className=\"platform\">\n        \n        <div className=\"label urgent\">Urgent</div>\n        <div className=\"label not-urgent\">Not urgent</div>\n        <div className=\"label important\">Important</div>\n        <div className=\"label not-important\">Not important</div>\n\n        {areaComponents}\n    </div>\n  )\n}\n\nexport default Platform;","export const initializeData = () => ({\n    doArea: {\n        name: \"Do\",\n        items: []\n      },\n      scheduleArea: {\n        name: \"Schedule\",\n        items: []\n      },\n      delegateArea: {\n        name: \"Delegate\",\n        items: []\n      },\n      eliminateArea: {\n        name: \"Eliminate\",\n        items: []\n      },\n      doneArea: {\n        name: \"Done\",\n        items: []\n      }\n  })","import Platform from '../Platform/Platform';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Platform />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}